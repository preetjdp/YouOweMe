input DeleteOweInputType {
  id: ID!
}

type Mutation {
  deleteOwe(data: DeleteOweInputType!): Timestamp!
  newOwe(data: NewOweInputType!): Owe!
  updateOwe(data: UpdateOweInputType!): Owe!
  updateUser(data: UpdateUserInputType!): User!
}

input NewOweInputType {
  title: String!
  amount: Int!
  issuedToID: String
  mobileNo: String
  displayName: String
}

type Owe {
  id: ID!
  title: String!
  amount: Int!
  state: OweState!
  issuedBy: User!
  issuedTo: User!
  created: Timestamp!
  permalink: String!
}

enum OweState {
  CREATED
  DECLINED
  ACKNOWLEDGED
  PAID
}

type Query {
  getOwe(id: String!): Owe!
  getOwes: [Owe!]!
  Me: User!
  getUsers: [User!]!
  getUser(id: String!): User
}

type Subscription {
  Me: User!
  User(id: String!): User!
}

scalar Timestamp

input UpdateOweInputType {
  id: String!
  title: Int
  amount: Float
  state: OweState
}

input UpdateUserInputType {
  id: ID!
  name: String
  fcmToken: String
}

type User {
  id: ID!
  name: String!
  image: String
  mobileNo: String!
  oweMe: [Owe!]!
  oweMeAmount: Int!
  iOwe: [Owe!]!
  iOweAmount: Int!
  fcmToken: String
  created: Timestamp!
}

